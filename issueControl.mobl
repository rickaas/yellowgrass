module issueControl

import mobl::ui::generic
// import mobl::ui::ios 
import Yellowgrassmobile
import servicemodel
import projectControl
import lib
import customStyle
import serviceOfflineWrapper
import AuthenticationControl
var doneloading = ""; 
control showPopulairIssues() {
	header("Populair Issues"){backButton("back",onclick={return showProjects(target="_top");})button("all",onclick={return ShowIssues();})}
	// showTable(Issue.all().filter("project", "=", currentProject).filter("open", "=", true).order("nrVotes", false).limit(10))
	var issues :Collection<Issue> = Issue.all().filter("project", "=", currentProject).filter("open", "=", true).order("nrVotes", false).limit(10)
	script{
		doneloading = ""; 
	}
	
  	table{	
  		list(issue:Issue in Issue.searchPrefix(doneloading).filter("project", "=", currentProject).order("number", false).limit(10)){ 
			row{
				cell{label(issue.number,onclick={ShowIssue(issue);})}
				cell{when(!issue.open){image("./images/tick.png")}else{image("./images/question.gif")}}
				cell{label(formatDate2(issue.submitted))}
				cell{label(issue.title,onclick={ShowIssue(issue);})}
			}
		}
	}
}  

screen ShowIssues(){
	header(currentProject.name) {backButton("back",onclick={return showProjects(target="_top");})button("populair",onclick={screen return;})}
	var phrase = "*"
	searchBox(phrase) 
	
	table{
		when(phrase ==""){
			list(issue:Issue in Issue.all().filter("project", "=", currentProject).order("number", false)){
				row{
					cell{label(issue.number,onclick={ShowIssue(issue);})}
				 	cell{when(!issue.open){image("./images/tick.png")}else{image("./images/question.gif")}}
				 	cell{label( formatDate2(issue.submitted))}
					cell{label(issue.title,onclick={ShowIssue(issue);})}
				} 
			} 
		}else{
			list(issue:Issue in Issue.searchPrefix(phrase).filter("project", "=", currentProject).order("number", false).limit(10)){
				row{
					cell{label(issue.number,onclick={ShowIssue(issue);})}
				 	cell{when(!issue.open){image("./images/tick.png")}else{image("./images/question.gif")}}
				 	cell{label( formatDate2(issue.submitted))}
					cell{label(issue.title,onclick={ShowIssue(issue);})}
				} 
			} 
		}
	}  
}

screen ShowIssue(issue : Issue) {
	header(currentProject.name) {
		backButton("back", onclick={ return ShowProject(currentProject, target="_top"); })
	} 
	var logList= Collection<(String,[Comment])>(("Log",issue.comments))
	when(!issue.open) {
		image("./images/tick.png",align="right")
		html("<h4><font> # "+ issue.number+ ": "+issue.title+"</font></h4>")
	} else {
		image("./images/question.gif", align="right")
		html("<h4><font> # "+ issue.number+ ": "+issue.title+"</font></h4>")
	}
	when(issue.reporter){
		group{
			html("<h4><font color=#334E33>Reporter</font></h4>") 
			item(onclick={ShowUser(issue.reporter);}){label(issue.reporter.name)} 
		}
	}
	html("<h4><font color=#334E33>Tags</font></h4>") 
	list(tag:Tag in issue.tags){
		cell{html("<font color =" + tag.color + ">" + tag.name+ " </font>")}
	} 
	when(issue.description != null){html("<h4><font color=#334E33>Description</font></h4>"+issue.description)} 
	
	when(issue.comments.count()){zoomList(logList, ShowHTMLHeaderLog, ShowLog)}   
}

control showTable(issues:Collection<Issue>){
	
table {    
		// row{
		// 	headerCol {label("Nr")}
		// 	headerCol {} 
		// 	headerCol { label("Date" )}
		// 	headerCol { label("Title" )}
		// }
		list(issue:Issue in issues){ 
			row{
				cell{label(issue.number,onclick={ShowIssue(issue);})}
				cell{when(!issue.open){image("./images/tick.png")}else{image("./images/question.gif")}}
				cell{label(formatDate2(issue.submitted))}
				cell{label(issue.title,onclick={ShowIssue(issue,target="_top");})}
			}
		}
		script{   
			// fixTablePopulairIssues();
		} 	

	}
}


 
control CreateIssue() {
	header(currentProject.name) {
		backButton("back", onclick={ return showProjects(target="_top"); })
	} 
	var title = ""
	var description = ""
	var category = ""
	var email = ""
	var types = currentProject.getIssueTypes()
	group{
		textField(title, placeholder="title", inputType="text", 
			validator=null, style=MyTextField, 
			invalidStyle=mobl::ui::generic::textFieldInvalidStyle, 
			autofocus=false, autocorrect=true, autocapitalize=true, 
			autocomplete=true, onchange={}, onkeyup={}
		)
	}
	group{
		mySelectField(category,types, placeholder ="Select Category", style=MySelectField, optionStyle=null)
	}
	group{
		textarea(description, placeholder="discription", onchange=null)
	} 
	when (!checkAuthentication()){
		group{
			textField(email, placeholder="email", inputType="email", 
				validator=null, style=MyTextField, 
				invalidStyle=mobl::ui::generic::textFieldInvalidStyle, 
				autofocus=false, autocorrect=true, autocapitalize=true, 
				autocomplete=true, onchange={}, onkeyup={}
			)
		}
	}
	
	button("submit",onclick={
			if(!checkAuthentication()){
				if(createIssue(currentProject, title, category, description, email)) { 
					return ShowProject(currentProject,target="_top"); 
				}
			} else {
				// var tags = Collection<Tag>();
				
				
				// tags.add(tag);
				// tags.add(currentProject.issueTypes.filter("name", "=", category));
				var newIssue = Issue(
					title 		= title,
					description	= description,
					open		= true,
					submitted 	= now(), 
					number		= currentProject.issuecount + 1,
					reporter	= User.findBy("name", getUserName()),
					project		= currentProject
				);
				if(category != "") {
					var tag = Tag.load(category);
					newIssue.tags.add(tag);
				}
				currentProject.issuecount = currentProject.issuecount + 1 ;
				return ShowIssue(newIssue, target="_top");
			}
	})	 
}