module servicemodel

entity Project{
	// id : String
	name: String (searchable)
	description: String
	url : String 
	weeklyStatsGraph : String
	issuecount: Num
	members : Collection<User> (inverse:projects)
	followers: Collection<User>  (inverse:projects)
	issues : Collection<Issue> (inverse:project) 
	roadmap :Collection<Release> (inverse:project)
}

entity User{
	// id : String
	name: String 
	tag: String 
	url: String
	projects: Collection<Project>(inverse:members, inverse:followers) 
	
	
}

entity Release{
	
	name: String
	project: Project
	issues: Collection<Issue> (inverse:release)
	
	
}

entity Issue{
	// id : String
	number: Num
	title : String (searchable)
	description : String
	submitted : DateTime
	project : Project 
	reporter: User 
	nrVotes: Num
	open : Bool
	comments : Collection<Comment>(inverse:issue) 
	tags: Collection<Tag> (inverse:issue)
	release : Release
}

entity Comment :Event {
	// id : String
	text : String
	// submitted : DateTime
	author : User
	issue: Issue 
	
}
	


entity Event{
	// id : String
	submitted : DateTime
}

entity Tag{
	// id: String
	name  : String
	color : String
	issue: Issue 
	
}

function projectsMapper(json: JSON): [Project]{
		var Array = Collection<Project>();
		foreach(json:JSON in json){
			Array.add(Project.fromSelectJSON(json));
		}
		return Array.list();
}

function projectMapper(json: JSON): Project {
		return Project.fromSelectJSON(json);
} 