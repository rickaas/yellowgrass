module webservices::mobl::simpleView
  import webservices :: mobl :: model
  import mobl :: ui :: generic
  screen showControl ( viewer : Control1 < Entity < ? > > , value : Entity < ? > ) {
    viewer ( value )
  }
  screen showControlList ( viewer : Control3 < String , Collection < Entity < ? > > , Control1 < Dynamic > > , headerName : String , values : Collection < Entity < ? > > , dviewer : Control1 < Dynamic > ) {
    viewer ( headerName , values , dviewer )
  }
  control showField ( name : String , value : String ) {
    item {
      label ( name , style = textFieldLabelStyle )
      textField ( value , disabled = true )
    }
  }
  control showTextField ( name : String , value : String ) {
    item {
      label ( name , style = textFieldLabelStyle )
      textField ( value )
    }
  }
  control showBoolField ( name : String , value : Bool ) {
    item {
      label ( name , style = textFieldLabelStyle )
      checkBox ( value )
    }
  }
  control showNumField ( name : String , value : Num ) {
    item {
      label ( name , style = textFieldLabelStyle )
      numField ( value )
    }
  }
  control showEntityField ( name : String , value : Entity < ? > , viewer : Control1 < Entity < ? > > ) {
    when ( value ) {
      item ( onclick = { showControl(viewer,value); } ) {
        label ( name )
      }
    }
  }
  control showEntitiesField ( name : String , values : Collection < Entity < ? > > , viewer : Control1 < Entity < ? > > ) {
    when ( values ) {
      item ( onclick = { showControlList(showEntitiesList,name,values,viewer); } ) {
        label ( name )
      }
    }
  }
  control showEntitiesList ( headerName : String , values : Collection < Entity < ? > > , viewer : Control1 < Entity < ? > > ) {
    header ( headerName ) {
      backButton ( "back" , onclick = { back(); } )
    }
    list ( value in values ) {
      item ( onclick = { showControl(viewer,value); } ) {
        label ( value . id )
      }
    }
  }
  <javascript>
  __ns.back = function() {
                history.back();
              };
  </javascript>
  external function back ( ) : void
  control showUserSimple ( ent : User ) {
    header ( "User" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showTextField ( "name" , ent . name )
      showTextField ( "email" , ent . email )
      showBoolField ( "notifications" , ent . notifications )
      showEntitiesField ( "projects" , ent . projects , showProjectSimple )
      showTextField ( "url" , ent . url )
      showTextField ( "tag" , ent . tag )
    }
  }
  control showTagRemovalSimple ( ent : TagRemoval ) {
    header ( "TagRemoval" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showEntityField ( "actor" , ent . actor , showUserSimple )
      showEntityField ( "tag" , ent . tag , showTagSimple )
      when ( ent . moment ) {
        showField ( "moment" , ent . moment . toDateString ( ) )
      }
    }
  }
  control showTagAdditionSimple ( ent : TagAddition ) {
    header ( "TagAddition" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showEntityField ( "actor" , ent . actor , showUserSimple )
      showEntityField ( "tag" , ent . tag , showTagSimple )
      when ( ent . moment ) {
        showField ( "moment" , ent . moment . toDateString ( ) )
      }
    }
  }
  control showTagSimple ( ent : Tag ) {
    header ( "Tag" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showTextField ( "name" , ent . name )
      showTextField ( "description" , ent . description )
      showEntityField ( "project" , ent . project , showProjectSimple )
      showEntitiesField ( "tags" , ent . tags , showTagSimple )
    }
  }
  control showProjectSimple ( ent : Project ) {
    header ( "Project" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showTextField ( "name" , ent . name )
      showTextField ( "description" , ent . description )
      showTextField ( "url" , ent . url )
      showEntitiesField ( "issues" , ent . issues , showIssueSimple )
      showEntitiesField ( "members" , ent . members , showUserSimple )
      showEntitiesField ( "memberRequests" , ent . memberRequests , showUserSimple )
      showEntitiesField ( "followers" , ent . followers , showUserSimple )
      showBoolField ( "private" , ent . private )
      showTextField ( "email" , ent . email )
      showNumField ( "lastSynced" , ent . lastSynced )
      showBoolField ( "sync" , ent . sync )
    }
  }
  control showIssueReopenSimple ( ent : IssueReopen ) {
    header ( "IssueReopen" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showEntityField ( "actor" , ent . actor , showUserSimple )
      when ( ent . moment ) {
        showField ( "moment" , ent . moment . toDateString ( ) )
      }
    }
  }
  control showIssueMovedSimple ( ent : IssueMoved ) {
    header ( "IssueMoved" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showEntityField ( "actor" , ent . actor , showUserSimple )
      showEntityField ( "target" , ent . target , showIssueSimple )
      when ( ent . moment ) {
        showField ( "moment" , ent . moment . toDateString ( ) )
      }
    }
  }
  control showIssueGhostSimple ( ent : IssueGhost ) {
    header ( "IssueGhost" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showTextField ( "title" , ent . title )
      showTextField ( "description" , ent . description )
      showEntityField ( "project" , ent . project , showProjectSimple )
      showTextField ( "email" , ent . email )
      showEntitiesField ( "tags" , ent . tags , showTagSimple )
      showBoolField ( "alive" , ent . alive )
    }
  }
  control showIssueCloseSimple ( ent : IssueClose ) {
    header ( "IssueClose" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showEntityField ( "actor" , ent . actor , showUserSimple )
      when ( ent . moment ) {
        showField ( "moment" , ent . moment . toDateString ( ) )
      }
    }
  }
  control showIssueSimple ( ent : Issue ) {
    header ( "Issue" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showNumField ( "number" , ent . number )
      showTextField ( "title" , ent . title )
      showTextField ( "description" , ent . description )
      when ( ent . submitted ) {
        showField ( "submitted" , ent . submitted . toDateString ( ) )
      }
      showEntityField ( "project" , ent . project , showProjectSimple )
      showEntityField ( "reporter" , ent . reporter , showUserSimple )
      showBoolField ( "open" , ent . open )
      showEntitiesField ( "log" , ent . log , showEventSimple )
      showEntitiesField ( "tags" , ent . tags , showTagSimple )
      showTextField ( "email" , ent . email )
      showNumField ( "nrVotes" , ent . nrVotes )
      showEntitiesField ( "attachments" , ent . attachments , showAttachmentSimple )
      showTextField ( "projectName" , ent . projectName )
      showTextField ( "reporterName" , ent . reporterName )
    }
  }
  control showEventSimple ( ent : Event ) {
    header ( "Event" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      when ( ent . moment ) {
        showField ( "moment" , ent . moment . toDateString ( ) )
      }
    }
  }
  control showCommentSimple ( ent : Comment ) {
    header ( "Comment" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      showTextField ( "text" , ent . text )
      showEntityField ( "author" , ent . author , showUserSimple )
      when ( ent . moment ) {
        showField ( "moment" , ent . moment . toDateString ( ) )
      }
    }
  }
  control showAttachmentSimple ( ent : Attachment ) {
    header ( "Attachment" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    group {
      showTextField ( "id" , ent . id )
      showNumField ( "version" , ent . version )
      when ( ent . date ) {
        showField ( "date" , ent . date . toDateString ( ) )
      }
    }
  }
  screen syncSimpleView ( ) {
    header ( "Sync Entities" ) {
      backButton ( "back" , onclick = { back(); } )
    }
    var phrase = ""
    searchBox ( phrase )
    list ( ent in Project . searchPrefix ( phrase ) . order ( "name" , true ) ) {
      item {
        checkBox ( ent . sync , label = ent . name )
      }
    }
  }