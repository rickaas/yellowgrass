module webservices::mobl::sync
  import webservices :: mobl :: mapper
  import webservices :: mobl :: model
  import webservices :: mobl :: unsync
  service Sync {
    resource getTimeStamp ( ) : Num {
      uri="webservice/getTimeStamp"
      method="PUT"
      mapper=timeStampMapper
    }
    resource syncAttachment ( arg : JSON ) : void {
      uri="webservice/syncAttachment"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=AttachmentMapper
    }
    resource syncComment ( arg : JSON ) : void {
      uri="webservice/syncComment"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=CommentMapper
    }
    resource syncEvent ( arg : JSON ) : void {
      uri="webservice/syncEvent"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=EventMapper
    }
    resource syncIssue ( arg : JSON ) : void {
      uri="webservice/syncIssue"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=IssueMapper
    }
    resource syncIssueClose ( arg : JSON ) : void {
      uri="webservice/syncIssueClose"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=IssueCloseMapper
    }
    resource syncIssueGhost ( arg : JSON ) : void {
      uri="webservice/syncIssueGhost"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=IssueGhostMapper
    }
    resource syncIssueMoved ( arg : JSON ) : void {
      uri="webservice/syncIssueMoved"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=IssueMovedMapper
    }
    resource syncIssueReopen ( arg : JSON ) : void {
      uri="webservice/syncIssueReopen"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=IssueReopenMapper
    }
    resource syncProject ( arg : JSON ) : void {
      uri="webservice/syncProject"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=ProjectMapper
    }
    resource syncTag ( arg : JSON ) : void {
      uri="webservice/syncTag"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=TagMapper
    }
    resource syncTagAddition ( arg : JSON ) : void {
      uri="webservice/syncTagAddition"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=TagAdditionMapper
    }
    resource syncTagRemoval ( arg : JSON ) : void {
      uri="webservice/syncTagRemoval"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=TagRemovalMapper
    }
    resource syncUser ( arg : JSON ) : void {
      uri="webservice/syncUser"
      method="PUT"
      data=JSON . stringify ( arg )
      mapper=UserMapper
    }
    resource getTopLevelEntities ( ) : void {
      uri="webservice/getTopLevelEntities"
      method="PUT"
      data={}
      mapper=ProjectMapper
    }
  }
  function syncAllUser ( ) {
    var begin = now ( ) ;
    Sync . syncUser ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing User: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllTagRemoval ( ) {
    var begin = now ( ) ;
    Sync . syncTagRemoval ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing TagRemoval: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllTagAddition ( ) {
    var begin = now ( ) ;
    Sync . syncTagAddition ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing TagAddition: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllTag ( ) {
    var begin = now ( ) ;
    Sync . syncTag ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing Tag: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllProject ( ) {
    var begin = now ( ) ;
    Sync . syncProject ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing Project: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllIssueReopen ( ) {
    var begin = now ( ) ;
    Sync . syncIssueReopen ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing IssueReopen: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllIssueMoved ( ) {
    var begin = now ( ) ;
    Sync . syncIssueMoved ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing IssueMoved: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllIssueGhost ( ) {
    var begin = now ( ) ;
    Sync . syncIssueGhost ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing IssueGhost: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllIssueClose ( ) {
    var begin = now ( ) ;
    Sync . syncIssueClose ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing IssueClose: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllIssue ( ) {
    var begin = now ( ) ;
    Sync . syncIssue ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing Issue: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllEvent ( ) {
    var begin = now ( ) ;
    Sync . syncEvent ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing Event: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllComment ( ) {
    var begin = now ( ) ;
    Sync . syncComment ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing Comment: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAllAttachment ( ) {
    var begin = now ( ) ;
    Sync . syncAttachment ( Project . all ( ) . filter ( "sync" , "=" , true ) . selectJSON ( [ "id" , "lastSynced" ] ) );
    log("time needed for syncing Attachment: "+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }
  function syncAll ( ) {
    var begin = now ( ) ;
    var time = Sync . getTimeStamp ( ) ;
    syncAllProject();
    syncAllIssue();
    syncAllUser();
    syncAllEvent();
    syncAllTag();
    syncAllAttachment();
    foreach
    (
    tl
    in
    Project . all ( ) . filter ( "sync" , "=" , true )
    )
    {
    tl . lastSynced = time ;
    }
    log("totaltime:"+( ( now ( ) - begin ) / 1000 ) . toString ( ));
  }