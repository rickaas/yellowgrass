module webservices::mobl::model
  entity User {
    version : Num
    name : String
    email : String
    notifications : Bool
    projects : Collection < Project > ( inverse : members )
    url : String
    tag : String
    generatedPropertyForInverse_Project_followers : Collection < Project > ( inverse : followers )
    generatedPropertyForInverse_Project_memberRequests : Collection < Project > ( inverse : memberRequests )
  }
  entity TagRemoval {
    version : Num
    actor : User
    tag : Tag
    moment : DateTime
  }
  entity TagAddition {
    version : Num
    actor : User
    tag : Tag
    moment : DateTime
  }
  entity Tag {
    version : Num
    name : String
    description : String
    project : Project
    tags : Collection < Tag > ( inverse : generatedPropertyForInverse_Tag_tags )
    generatedPropertyForInverse_Issue_tags : Collection < Issue > ( inverse : tags )
    generatedPropertyForInverse_IssueGhost_tags : Collection < IssueGhost > ( inverse : tags )
    generatedPropertyForInverse_Tag_tags : Collection < Tag > ( inverse : tags )
  }
  entity Project {
    version : Num
    name : String ( searchable )
    description : String
    url : String
    issues : Collection < Issue > ( inverse : project )
    members : Collection < User > ( inverse : projects )
    memberRequests : Collection < User > ( inverse : generatedPropertyForInverse_Project_memberRequests )
    followers : Collection < User > ( inverse : generatedPropertyForInverse_Project_followers )
    private : Bool
    email : String
    sync : Bool
  }
  entity IssueReopen {
    version : Num
    actor : User
    moment : DateTime
  }
  entity IssueMoved {
    version : Num
    actor : User
    target : Issue
    moment : DateTime
  }
  entity IssueGhost {
    version : Num
    title : String
    description : String
    project : Project
    email : String
    tags : Collection < Tag > ( inverse : generatedPropertyForInverse_IssueGhost_tags )
    alive : Bool
  }
  entity IssueClose {
    version : Num
    actor : User
    moment : DateTime
  }
  entity Issue {
    version : Num
    number : Num
    title : String ( searchable )
    description : String ( searchable )
    submitted : DateTime
    project : Project ( inverse : issues )
    reporter : User
    open : Bool
    log : Collection < Event > ( inverse : generatedPropertyForInverse_Issue_log )
    tags : Collection < Tag > ( inverse : generatedPropertyForInverse_Issue_tags )
    email : String
    nrVotes : Num
    attachments : Collection < Attachment > ( inverse : generatedPropertyForInverse_Issue_attachments )
    projectName : String ( searchable )
    reporterName : String ( searchable )
  }
  entity Event {
    version : Num
    moment : DateTime
    generatedPropertyForInverse_Issue_log : Collection < Issue > ( inverse : log )
  }
  entity Comment {
    version : Num
    text : String ( searchable )
    author : User
    moment : DateTime
  }
  entity Attachment {
    version : Num
    date : DateTime
    generatedPropertyForInverse_Issue_attachments : Collection < Issue > ( inverse : attachments )
  }